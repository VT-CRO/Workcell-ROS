
# Works with: PRINT_END AUTHOR=CHANGE_ME HEIGHT={(total_layer_count-1)*(layer_height)+(initial_layer_print_height)} NAME="{input_filename_base}"
[gcode_macro PRINT_END]
gcode:
    {% set author = params.AUTHOR|default(0) %}
    {% set name = params.NAME|default(0) %}
    {% set height = params.HEIGHT|default(0) %}
    RUN_SHELL_COMMAND CMD=klipper2ros PARAMS="-s /tmp/printer_socket -m END,{height},{name},{author}"

[gcode_shell_command klipper2ros]
command: python3 klipper2ros.py
timeout: 30.
verbose: True

[gcode_macro _MOVE_TO_PRINTER]
gcode:
    {% set printer_number = params.PRINTER_NUMBER|default(printer_number) %}

    {% if printer_number == "1" %}
      RESPOND MSG="Moving to printer 1"
      G0 X50 Y50 Z10 F1500 ; Example coordinates for printer 1
    {% elif printer_number == "2" %}
      RESPOND MSG="Moving to printer 2"
      G0 X150 Y50 Z10 F1500 ; Example coordinates for printer 2
    {% else %}
      RESPOND MSG="Invalid printer number: {printer_number}"
      M400
    {% endif %}
    M400

[gcode_macro _MOVE_TO_SHELF]
  gcode:
    {% set shelf_number = params.SHELF_NUMBER|default(shelf_number) %}

    {% if shelf_number == "1" %}
      RESPOND MSG="Moving to shelf 1"
      G0 X50 Y150 Z10 F1500 ; Example coordinates for shelf 1
    {% elif shelf_number == "2" %}
      RESPOND MSG="Moving to shelf 2"
      G0 X150 Y150 Z10 F1500 ; Example coordinates for shelf 2
    {% elif shelf_number == "3" %}
      RESPOND MSG="Moving to shelf 3"
      G0 X250 Y150 Z10 F1500 ; Example coordinates for shelf 3
    {% else %}
      RESPOND MSG="Invalid shelf number: {shelf_number}"
      M400 ; Wait for all movements to complete
    {% endif %}
    M400


[gcode_macro MOVE_PLATE]
gcode:
    {% set printer_number = params.PRINTER_NUMBER|default(printer_number) %}
    {% set shelf_number = params.SHELF_NUMBER|default(shelf_number) %}
    # Check if the printer is homed
    {% if not printer.toolhead.homed_axes %}
    RESPOND MSG="Printer not homed, homing now..."
    G28
    {% endif %}
  
    RESPOND MSG="Moving plate from printer {printer_number} to shelf {shelf_number}"
    
    # Go to designated printer
    _MOVE_TO_PRINTER PRINTER_NUMBER={printer_number}
    RESPOND MSG="Picking up plate from printer {printer_number}"
    # TODO: pickup code

    # Move to shelf
    _MOVE_TO_SHELF SHELF_NUMBER={shelf_number}
    RESPOND MSG="Dropping off plate at shelf {shelf_number}"
    # TODO: dropoff code

    # Pick up new plate
    RESPOND MSG="Picking up new plate"
    G0 Z30 F1500
    G0 X200 Y200 F1500 ; Plate bank location
    M400
    # TODO: pickup code

    _MOVE_TO_PRINTER PRINTER_NUMBER={printer_number}
    RESPOND MSG="Dropping off plate at printer {printer_number}"
    # TODO: dropoff code

    # Log completion
    RESPOND MSG="Completed move from printer {printer_number} to shelf {shelf_number}"
    M400
    RUN_SHELL_COMMAND CMD=klipper2ros PARAMS="-s /tmp/gantry_socket -m MOVE_COMPLETE,{printer_number},{shelf_number}"

#   Use PRINT_START for the slicer starting script - please customise for your slicer of choice
[gcode_macro PRINT_START]
gcode:
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
    NEVERMORE_PRINT_START
    SET_NOZZLE_LEDS_ON
    M140 S{bedtemp}                                                              ; set & wait for bed temp
    G28                           ; home all axes
    M104 S150
    M190 S{bedtemp}                                                              ; set & wait for bed temp
   # TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chambertemp}    ; wait for chamber temp
    QUAD_GANTRY_LEVEL
    G28 Z
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE
    Smart_Park
    M109 S{hotendtemp}                                                        ; set & wait for hotend temp
    #BEDFANSOFF
    G90                            ; absolute positioning
    #MMU_START_LOAD_INITIAL_TOOL
    SKEW_PROFILE LOAD=calilantern_skew_profile
    LINE_PURGE
   

#   Use PRINT_END for the slicer ending script - please customise for your slicer of choice
[gcode_macro PRINT_END]
gcode:
    # safe anti-stringing move coords
    {% set th = printer.toolhead %}
    {% set x_safe = th.position.x + 20 * (1 if th.axis_maximum.x - th.position.x > 20 else -1) %}
    {% set y_safe = th.position.y + 20 * (1 if th.axis_maximum.y - th.position.y > 20 else -1) %}
    {% set z_safe = [th.position.z + 2, th.axis_maximum.z]|min %}
    
    SAVE_GCODE_STATE NAME=STATE_PRINT_END
    
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-10.0 F1800                 ; retract filament
    
    TURN_OFF_HEATERS
    
    G90                                      ; absolute positioning
    G0 X{x_safe} Y{y_safe} Z{z_safe} F20000  ; move nozzle to remove stringing
    G0 X{th.axis_maximum.x//2} Y{th.axis_maximum.y - 30} F3600  ; park nozzle at rear
    M107                                     ; turn off fan
    MMU_END
    
    BED_MESH_CLEAR
    SET_NOZZLE_LEDS_OFF
    RESTORE_GCODE_STATE NAME=STATE_PRINT_END
    SET_SKEW CLEAR=1